package pipeline

import "context"

// TODO: this gonna be generated by go generate for each types
func GeneratorInt(
	ctx context.Context,
	integers ...int,
) <-chan int {
	intCh := make(chan int, len(integers))

	go func() {
		defer close(intCh)

		for _, i := range integers {
			select {
			case <-ctx.Done():
				return
			case intCh <- i:
			}
		}
	}()

	return intCh
}
